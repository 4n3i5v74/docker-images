#!/bin/sh

# Source settings
. /out/bintray-env


case "$tvh_release" in
     
  stable)
		oneline_desc="Stable Releases"
		deb_dists_when_tagged="testing,stable"
  ;;
 
  testing)
		oneline_desc="Stable branch - Nightly builds"
		deb_dists_when_tagged="testing,stable"
  ;;
 
  unstable)
		oneline_desc="Unstable Releases"
		deb_dists_when_tagged="master,unstable"
  ;;
 
  master)
		oneline_desc="Master branch - Nightly builds"
		deb_dists_when_tagged="master,unstable"
  ;;
 
  *)
    "error: unrecognized tvheadend release \"$tvh_release\". valid values are stable, testing, unstable and master"
    exit 1
  ;;
esac


deb_dist="$tvh_release"


# Boilerplate description
bintray_ver_desc="Tvheadend on ubuntu - https://tvheadend.org/
$oneline_desc


# 1. Add Bintray's GPG key:
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 379CE192D401AB61


# 2. Add this repo to your sources.list:

# tvheadend - $oneline_desc
echo deb https://dl.bintray.com/dreamcat4/ubuntu $deb_dist main | sudo tee -a /etc/apt/sources.list
"


# Bug fix 21/Oct/2015
# We must be sure to upload for both of these branches when a new version is released (tagged in git).
# However due to limititations: Bintray API (specifically no API to *modify* an existing uploaded file's deb_dists tag field)...
#
# Furthermore, we cannot control yet the order in which Dockerhub's builds are executed.
# As the 'build just 1 tag-only' build trigger doesn't work yet. It just builds everything.
#
# The 2nd build run to upload of these two branches will fail if the version was uploaded
# already by the first branch to complete it's job.
#
# We do this when the $tvh_ver only contains just [0-9.] chars, e.g. "4.0.6" should be uploaded
# for both of the branches. It is a race condition, so the first build worker to complete will do it.
set -x
tvh_deb="$(find /out -name 'tvheadend_*.deb')"
tvh_changes="$(find /out -name 'tvheadend_*.changes')"
tvh_dbg_deb="$(find /out -name 'tvheadend-dbg_*.deb')"
tvh_ver="$(echo $tvh_deb | sed -e 's|.*/tvheadend_||' -e 's|-dirty||' -e 's|~precise.*||' -e 's|~trusty.*||' -e 's|~focal.*||')"
echo $tvh_ver | grep -qv "[^0-9.]" && deb_dist="$deb_dists_when_tagged"
set +x



_create_version ()
{
	# Create a new version
	echo curl -sS -i -u${bintray_user}:\${bintray_key} -H "Content-Type: application/json" \
		-X POST https://api.bintray.com/packages/${bintray_user}/${bintray_repo}/${bintray_pkg_name}/versions \
		--data "{ \"name\": \"${tvh_ver}\", \"desc\": \"${bintray_ver_desc}\", }"

	bintray_api_resp="$(curl -sS -i -u${bintray_user}:${bintray_key} -H "Content-Type: application/json" \
		-X POST https://api.bintray.com/packages/${bintray_user}/${bintray_repo}/${bintray_pkg_name}/versions \
		--data "{ \"name\": \"${tvh_ver}\", \"desc\": \"${bintray_ver_desc}\", }" | tr -d '\"')"

	bintray_api_http_status="$(echo "$bintray_api_resp" | head -1 | cut -d' ' -f2)"

	if echo "$bintray_api_resp" | grep -qi "already exists"; then
		echo "Aborting. Version ${tvh_ver} of ${bintray_pkg_name} has already been upladed to bintray."
		echo "API response: ^$bintray_api_resp$"
		exit 0

  elif [ $bintray_api_http_status -eq 409 ]; then
    echo "Version conflict."
    echo "API response: ^$bintray_api_resp$"
    exit 0

	elif [ $bintray_api_http_status -ge 400 ]; then
		echo "Upload error. Could not create a new pkg version on bintray."
		echo "API response: ^$bintray_api_resp$"
		exit 1

	else
		echo "$bintray_api_resp"
	fi
}


_upload_debs ()
{
	# Upload files
	for distfile in $tvh_deb $tvh_changes $tvh_dbg_deb; do
			deb_repo_path="pool/main/t/tvheadend/$(basename ${distfile})"

			echo curl -sS -i -T $distfile -u${bintray_user}:\${bintray_key} -H X-Bintray-Version:$tvh_ver \
	      https://api.bintray.com/content/${bintray_user}/${bintray_repo}/${bintray_pkg_name}/${tvh_ver}/${deb_repo_path}\;deb_distribution=${deb_dist}\;deb_component=${deb_component}\;deb_architecture=amd64\;publish=1

	    bintray_api_resp="$(curl -sS -i -T $distfile -u${bintray_user}:${bintray_key} -H X-Bintray-Version:$tvh_ver \
	      https://api.bintray.com/content/${bintray_user}/${bintray_repo}/${bintray_pkg_name}/${tvh_ver}/${deb_repo_path}\;deb_distribution=${deb_dist}\;deb_component=${deb_component}\;deb_architecture=amd64\;publish=1 | tr -d '\"')"

			bintray_api_http_status="$(echo "$bintray_api_resp" | head -1 | cut -d' ' -f2)"

			if [ $bintray_api_http_status -ge 400 ]; then
				echo "Upload error. Could not upload to bintray."
				echo "API response: ^$bintray_api_resp$"
				exit 1
			else
				echo "$bintray_api_resp"
			fi
	done
}


_create_version

_upload_debs






